function y(e){window.enmity.plugins.registerPlugin(e)}const u=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const r=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage,window.enmity.modules.common.Toasts,window.enmity.modules.common.Dialog,window.enmity.modules.common.Token;const v=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users,window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const S=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;function R(e){return window.enmity.patcher.create(e)}function a(e,n,l,i){window.enmity.clyde.sendReply(e,n,l,i)}var g;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(g||(g={}));var h;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(h||(h={}));var c;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(c||(c={}));var b;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(b||(b={}));var w;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e[e.Attachment=11]="Attachment"})(w||(w={}));var k;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(k||(k={}));const M={id:"deletewebhook",name:"deletewebhook",displayName:"deletewebhook",description:"Delete a webhook.",displayDescription:"Delete a webhook.",type:h.Chat,inputType:c.BuiltInText,options:[{name:"url",displayName:"url",description:"The URL of the webhook.",displayDescription:"The URL of the webhook.",type:w.String,required:!0}],execute:async function(e,n){var l,i,t;const m=e[e.findIndex(s=>s.name==="url")].value;try{const s=await v.delete(m);return console.log("[WebhookManager] Webhook deletion response: "+JSON.stringify(s)),s.ok==!0?a((l=n==null?void 0:n.channel.id)!=null?l:"0","Webhook deleted successfully."):(console.log("[WebhookManager] Webhook deletion failed, output: "+s.status),a((i=n==null?void 0:n.channel.id)!=null?i:"0","There was an error deleting the webhook. Check the console for more info."))}catch{return console.log("[WebhookManager] Webhook deletion failed."),a((t=n==null?void 0:n.channel.id)!=null?t:"0","There was an error deleting the webhook.")}}},W={id:"webhookinfo",name:"webhookinfo",displayName:"webhookinfo",description:"Retrieve information about a webhook.",displayDescription:"Retrieve information about a webhook.",type:h.Chat,inputType:c.BuiltInText,options:[{name:"url",displayName:"url",description:"The URL of the webhook.",displayDescription:"The URL of the webhook.",type:w.String,required:!0}],execute:async function(e,n){var l;const i=e[e.findIndex(t=>t.name==="url")].value;try{await fetch(i).then(t=>t.json()).then(t=>{var m;console.log("[WebhookManager] Webhook GET response: "+JSON.stringify(t)),a((m=n==null?void 0:n.channel.id)!=null?m:"0",`
            Information properly recieved. 

            Original Webhook Name: `+t.name+`

            Webhook ID: `+t.id+`
 
            Webhook Channel ID: `+t.channel_id+`

            Webhook Guild ID:`+t.guild_id+`

            Original Webhook Image URL: https://cdn.discordapp.com/avatars/`+t.id+"/"+t.avatar+`.png

            Webhook Type: `+t.type+`

            Webhook Creator's User ID:`+t.user.id+` 
`)})}catch(t){console.log("[WebhookManager] Webhook GET failed: "+t),a((l=n==null?void 0:n.channel.id)!=null?l:"0","There was an error getting information the webhook. Check the console for further information.")}}};var D="WebhookManager",F="1.0.0",E="Manage your webhooks easily; delete, send messages, get detailed info and more.",B=[{name:"byron",id:"639577344276692992"}],x="#00007d",I="https://github.com/byeoon/WebhookManager",L=["Bug fixes and better error handling"],f={name:D,version:F,description:E,authors:B,color:x,sourceUrl:I,changelog:L};const{components:o}=window.enmity;o.Alert,o.Button,o.FlatList,o.Image,o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const N=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const d=o.Text;o.TextInput,o.TouchableHighlight,o.TouchableOpacity,o.TouchableWithoutFeedback,o.Touchable;const U=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox,o.FormDivider,o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio,o.FormRow,o.FormSection,o.FormSelect,o.FormSubLabel,o.FormSwitch,o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;var G=({settings:e})=>{const n=S.createThemedStyleSheet({title:{flexDirection:"column"},pluginTitle:{fontSize:30,paddingTop:20,paddingLeft:20,paddingRight:30,color:u.ThemeColorMap.HEADER_PRIMARY},pluginAuthor:{fontSize:12,paddingLeft:45,color:u.ThemeColorMap.HEADER_SECONDARY},br:{fontSize:0,paddingTop:20,paddingLeft:20,paddingRight:30,color:u.ThemeColorMap.HEADER_SECONDARY},tab:{fontSize:14,paddingTop:20,paddingLeft:20,paddingRight:25,color:u.ThemeColorMap.HEADER_SECONDARY}});return r.createElement(N,null,r.createElement(U,{style:n.title},r.createElement(d,{style:n.pluginTitle},"WebhookManager"),r.createElement(d,{style:n.pluginAuthor},"Developed by byron"),r.createElement(d,{style:n.pluginAuthor},"Version ",f.version),r.createElement(d,{style:n.br}," "),r.createElement(d,{style:n.br}," ")))};const V=R("WebhookManager"),H={...f,onStart(){console.log("[WebhookManager] Hello World!"),this.commands=[M,W]},onStop(){V.unpatchAll(),this.commands=[]},getSettingsPanel({settings:e}){return r.createElement(G,{settings:e})}};y(H);
